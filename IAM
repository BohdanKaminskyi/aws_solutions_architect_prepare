IAM - identity access management
    - manage users and their level of access to AWS console
    Features:
        - centralised control of your AWS account
        - shared access to your AWS account
        - granular permissions (i want people to access this service, but not that one)
        - identity federation (use ActiveDirectory, LinkedIn, Facebook etc.)
        - MFA
        - temporary access for users/devices and services where necessary 
        - setting up password rotation policy (every 3 weeks, month etc.)
        - integrates with many different AWS services
        - supports PCI DSS compliance (for credit card support probably)

    Key terminology
        users - end users (people, employees of organization)
        groups - collection of users. each user in group will inherit the permissions of the group (group to use s3)
        policies - made up of documents, called policy documents. JSON-formatted, they give permissions 
                    as to what a user/group/role is able to do (policies are your permissions)
        roles - you create role and then assign them to AWS resources


IAM LAB
1. Use N.Virginia -- one of the newest prod locations, most stable btw
IAM users sign-in link:
    - with that, people can sign in to your account
2. IAM users are GLOBAL (i.e. not for Ohio, or NV)
3. You can add users with two checkboxes (access types):
    - programmatic access (access key ID + secret access key for AWS CLI, API, SDK etc.)
    - AWS management console access (with password)

+ require password reset option 
+ console password (autogenerated or custom)
after that we can add user to a group ( e.g. Developers)   