S3 - simple storage service
    - It's object storage. (flat files)
    - files size 0...5Tb
    - unlimited storage
    - files are stored in buckets (bucket is basically a folder)
    - S3 is universal namespace (names must be unique globally)

    Objects (files) in S3 consist of following:
        - key (the name of the object)
        - value (actually data)
        - version ID (important for versioning)
        - metadata
        - subresources
            > access control list
            > torrent
        - amazon guarantees 99.9... (durability of information 11 x 9s)

How does data consistency work for s3?
    1. Read after Write consistency for PUTS of new Objects
        - you upload file to s3, you can read it immidiately (just after it is written on s3)
    2. Eventual Consistency for overwrite PUTS and DELETES (can take some time to propagate)
        - if you update an existing file or delete a file and read it immidiately, you may get an older version
          or you may not. Changes to objects may take a little bit of time to propagate

S3 has
    - tiered storage
    - lifecycle management (moving object between different tiers)
    - versioning 
    - encription of objects
    - MFA for deleting objects
    - you can secure your data using Access Control Lists and Bucket policies
    x it is not suitable to install OS/DB


S3 Storage classes
    - S3 Standart 
            >>> stored redundant across multiple devices in multiple facilities,
            >>> designed to sustain the loss of 2 facilities concurrently)
    - S3 - IA (Infrequently Accessed)
            >>> for data that is accessed less frequently, but requires rapid access when needed
            >>> lower fee than S3, but you are charged a retrieval fee
    - S3 One Zone - IA
            >>> low cost option for infrequently accessed data
            >>> you do not worry about multiple AZ data resilience
    - S3 Intelligent Tiering
            >>> Designed to optimize costs by automatically moving data to the mist cost-efficient access tier,
                without performance impact or operational overhead
    - S3 Glacier 
            >>> secure, durable, low-cost
            >>> for data archiving 
            >>> retrieval times configurable from minutes to hours
    - S3 Glacier Deep Archive
            >>> lowest-cost storage class
            >>> used where a retrieval time of 12 hours is acceptable


In S3 you are charged in the following ways:
    - Storage
    - Requests
    - Storage Management Pricing
    - Transfer Acceleration
    - Cross Region Replication Pricing


What is Cross Region Replication:
    if that option is selected:
        Let's say you upload to a bucket at US-East-1 and you want to automatically replicate your objects to
        another bucket that is in Sidney, and you want to have high availability/disaster recovery etc.
        So as soon as you upload object to US-East-1 bucket, it will be automatically replicated to bucket on Sidney


What is S3 Transfer Acceleration:
    It enables fast, easy and secure transfers of files over long distances between your end users and S3 bucket
    It uses Amazon CloudFront globally distributed edge locations. As the data arrives at an edge location, 
    data is routed to Amazon S3 over an optimized network path.
    So basically, user uploads files NOT to bucket, but to edge location, and after that across Amazon backbone network to S3 bucket



S3 Security and Encryption
- by default, all new buckets are private
- you can set up access to your buckets using:
    > Bucket policies
    > Access Control Lists
- you can configure logging access requests, and even redirect them to another bucket

Encryption In Transit is archived by
    - SSL/TLS
Encryption At Rest (server-side, on store):
    - S3 Managed Keys - SSE-S3 (amazon manages keys for us)
    - AWS Key Management Service, Managed Keys - SSE-KMS (you and aws manage keys together)
    - Server Side Encryption With Customer Provided Keys - SSE-C (amazon gives you a key, but you manage by yourself)
Client side Encryption
    - you encrypt and then load

Encryption options:
    - AES2-256
    - AWS-KMS


Using Versioning with S3
    - Stores all versions of an object (including all writes and even if you delete an object)
    - great backup tool
    - once enabled for a bucket, cannot be disabled, only suspended
    - integrates with lifecycle rules
    - versioning MFA Delete capability, which uses multi-factor authentication,
      can be used to provide an additional layer of Security

If you updated and reuploaded file - it will be private again!
Size of a bucket is a sum of all files + all files versions!!! (if versioning is enabled).
    
    - when you delete file, aws just places delete marker on a file
    - deleting delete marker restores file
    - you can delete a version of a file - then you can't 'go back and restore'